<div id="comments-list">
    {{#commentDtos}}
        <div class="card m-2" id="comments-{{id}}">
            <div class="card-header">
                {{nickname}}
                <!-- Button trigger modal -->
                <button type="button"
                        class="btn btn-sm btn-outline-primary"
                        data-bs-toggle="modal"
                        data-bs-target="#comment-edit-modal"
                        data-bs-id="{{id}}"
                        data-bs-nickname="{{nickname}}"
                        data-bs-body="{{body}}"
                        data-bs-article-id="{{articleId}}">
                    edit
                </button>
                <!-- delete button -->
                <button type="button"
                        class = "btn btn-sm btn-outline-danger comment-delete-btn"
                        data-comment-id="{{id}}">
                    delete
                </button>
            </div>
            <div class="card-body">
                {{body}}
            </div>
        </div>
    {{/commentDtos}}
</div>

<!-- Modal -->
<div class="modal fade" id="comment-edit-modal" tabindex="-1" >
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">edit comment</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- edit comment form -->
                <form>
                    <div class="mb-3">
                        <label class="form-label">nickname</label>
                        <input type="text" class="form-control" id="edit-comment-nickname">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">comment</label>
                        <textarea type="text" class="form-control" rows="3"
                                  id="edit-comment-body"></textarea>
                    </div>
                        <input type="hidden" id="edit-comment-id">
                    <input type="hidden" id="edit-comment-article-id">
                    <button type="button" class="btn btn-primary"
                            id="comment-update-btn">edit completed</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- 모달 이벤트 처리-->
<script>
    {
        //모달 요소 선택
        const commentEditModal = document.querySelector("#comment-edit-modal");
        //모달 이벤트 감지
        //show.bs.modal : 모달이 열리기 직전에 발생하는 이벤트
        commentEditModal.addEventListener("show.bs.modal", function(event){
            const triggerBtn = event.relatedTarget;
            // 1. 트리거 버튼 선택

            const id = triggerBtn.getAttribute("data-bs-id");
            const nickname = triggerBtn.getAttribute("data-bs-nickname");
            const body = triggerBtn.getAttribute("data-bs-body");
            const articleId = triggerBtn.getAttribute("data-bs-article-id");
            // 2. 데이터 가져오기

            document.querySelector("#edit-comment-nickname").value = nickname;
            document.querySelector("#edit-comment-body").value = body;
            document.querySelector("#edit-comment-id").value = id;
            document.querySelector("#edit-comment-article-id").value = articleId;
            // 3. 수정 폼에 데이터 반영
        });
    }
    {
        const commentUpdateBtn = document.querySelector("#comment-update-btn");
        commentUpdateBtn.addEventListener("click", function(){
           const comment={
               id: document.querySelector("#edit-comment-id").value,
               nickname: document.querySelector("#edit-comment-body").value,
               article_id: document.querySelector("#edit-comment-article-id").value
           };
           console.log(comment);
           //수정 REST API 호출
            const url = "/api/comments/"+comment.id;
            fetch(url,{
                method: "PATCH",
                headers: {  //전송 데이터 타입(json) 정보
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(comment)   //comment 객체를 JSON 문자열로 변환 전송
            }).then(response=>{
                const msg = (response.ok) ? "댓글이 수정되었습니다." : "댓글 수정 실패";
                alert(msg);
                window.location.reload();
            })
        });
    }
</script>
<!-- 댓글 삭제 -->
<script>
    {
        const commentDeleteBtns = document.querySelectorAll((".comment-delete-btn"));

        commentDeleteBtns.forEach(btn=>{
            btn.addEventListener("click", (event)=>{
                const commentDeleteBtn = event.target;
                //이벤트 발생 요소 선택
                const commentId = commentDeleteBtn.getAttribute("data-comment-id");
                console.log(`deleted ${commentId}th comment`);
                const url = `/api/comments/${commentId}`;
                fetch(url, {
                    method: "DELETE"
                }).then(response => {
                    if(!response.ok){
                        alert("failed to delete comment!");
                        return;
                    }
                    //삭제 성공 시 댓글을 화면에서 지우고 메시지 창 띄우기
                    const target = document.querySelector(`#comments-${commentId}`);
                    target.remove();
                    const msg = `${commentId}th comment is deleted`;
                    alert(msg);
                    window.location.reload();
                })
            });
        });
    }
</script>